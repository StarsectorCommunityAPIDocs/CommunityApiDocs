name: Generate Javadocs

on:
  push:
    branches:
      - main
      - ci

jobs:
  generate-docs:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Authenticate with GitHub Packages
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.repository_owner }} --password-stdin

      - name: Fetch and Download JARs from GitHub Packages
        run: |
          echo "Fetching package list from the organization..."
          response=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/orgs/StarsectorCommunityApiDocs/packages?package_type=maven")

          if [ -z "$response" ] || [ "$response" == "null" ]; then
            echo "Error: API response is empty or null. Exiting..."
            exit 1
          fi

          packages=$(echo "$response" | jq -r '.[].name' || echo "")

          if [ -z "$packages" ]; then
            echo "No packages found. Exiting..."
            exit 1
          fi

          echo "Packages found: $packages"

          mkdir -p lib

          for package in $packages; do
            echo "Fetching versions for package $package..."
            response=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
              "https://api.github.com/orgs/StarsectorCommunityApiDocs/packages/maven/$package/versions")

            if [ -z "$response" ] || [ "$response" == "null" ]; then
              echo "No versions found for package $package. Skipping..."
              continue
            fi

            versions=$(echo "$response" | jq -r '.[].metadata.container.tags[]' 2>/dev/null || echo "")

            if [ -z "$versions" ]; then
              echo "No tags found for package $package. Skipping..."
              continue
            fi

            for version in $versions; do
              echo "Downloading JAR for $package version $version..."
              curl -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
                -o lib/${package}-${version}.jar \
                https://maven.pkg.github.com/StarsectorCommunityApiDocs/$package/$package/$version/$package-$version.jar
            done
          done


          echo "Fetching package list from the organization..."
response=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
  "https://api.github.com/orgs/StarsectorCommunityApiDocs/packages?package_type=maven")

if [ -z "$response" ] || [ "$response" == "null" ]; then
  echo "Error: API response is empty or null. Exiting..."
  exit 1
fi

packages=$(echo "$response" | jq -r '.[].name' || echo "")

if [ -z "$packages" ]; then
  echo "No packages found. Exiting..."
  exit 1
fi

echo "Packages found: $packages"

mkdir -p lib

for package in $packages; do
  echo "Fetching versions for package $package..."
  response=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
    "https://api.github.com/orgs/StarsectorCommunityApiDocs/packages/maven/$package/versions")

  if [ -z "$response" ] || [ "$response" == "null" ]; then
    echo "No versions found for package $package. Skipping..."
    continue
  fi

  versions=$(echo "$response" | jq -r '.[].metadata.container.tags[]' 2>/dev/null || echo "")

  if [ -z "$versions" ]; then
    echo "No tags found for package $package. Skipping..."
    continue
  fi

  for version in $versions; do
    echo "Downloading JAR for $package version $version..."
    curl -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
      -o lib/${package}-${version}.jar \
      https://maven.pkg.github.com/StarsectorCommunityApiDocs/$package/$package/$version/$package-$version.jar
  done
done

          echo "Fetching package list from the organization..."
response=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
  "https://api.github.com/orgs/StarsectorCommunityApiDocs/packages?package_type=maven")

if [ -z "$response" ] || [ "$response" == "null" ]; then
  echo "Error: API response is empty or null. Exiting..."
  exit 1
fi

packages=$(echo "$response" | jq -r '.[].name' || echo "")

if [ -z "$packages" ]; then
  echo "No packages found. Exiting..."
  exit 1
fi

echo "Packages found: $packages"

mkdir -p lib

for package in $packages; do
  echo "Fetching versions for package $package..."
  response=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
    "https://api.github.com/orgs/StarsectorCommunityApiDocs/packages/maven/$package/versions")

  if [ -z "$response" ] || [ "$response" == "null" ]; then
    echo "No versions found for package $package. Skipping..."
    continue
  fi

  versions=$(echo "$response" | jq -r '.[].metadata.container.tags[]' 2>/dev/null || echo "")

  if [ -z "$versions" ]; then
    echo "No tags found for package $package. Skipping..."
    continue
  fi

  for version in $versions; do
    echo "Downloading JAR for $package version $version..."
    curl -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
      -o lib/${package}-${version}.jar \
      https://maven.pkg.github.com/StarsectorCommunityApiDocs/$package/$package/$version/$package-$version.jar
  done
done


          echo "Fetching package list from the organization..."
response=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
  "https://api.github.com/orgs/StarsectorCommunityApiDocs/packages?package_type=maven")

if [ -z "$response" ] || [ "$response" == "null" ]; then
  echo "Error: API response is empty or null. Exiting..."
  exit 1
fi

packages=$(echo "$response" | jq -r '.[].name' || echo "")

if [ -z "$packages" ]; then
  echo "No packages found. Exiting..."
  exit 1
fi

echo "Packages found: $packages"

mkdir -p lib

for package in $packages; do
  echo "Fetching versions for package $package..."
  response=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
    "https://api.github.com/orgs/StarsectorCommunityApiDocs/packages/maven/$package/versions")

  if [ -z "$response" ] || [ "$response" == "null" ]; then
    echo "No versions found for package $package. Skipping..."
    continue
  fi

  versions=$(echo "$response" | jq -r '.[].metadata.container.tags[]' 2>/dev/null || echo "")

  if [ -z "$versions" ]; then
    echo "No tags found for package $package. Skipping..."
    continue
  fi

  for version in $versions; do
    echo "Downloading JAR for $package version $version..."
    curl -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
      -o lib/${package}-${version}.jar \
      https://maven.pkg.github.com/StarsectorCommunityApiDocs/$package/$package/$version/$package-$version.jar
  done
done

          echo "Fetching package list from the organization..."
response=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
  "https://api.github.com/orgs/StarsectorCommunityApiDocs/packages?package_type=maven")

if [ -z "$response" ] || [ "$response" == "null" ]; then
  echo "Error: API response is empty or null. Exiting..."
  exit 1
fi

packages=$(echo "$response" | jq -r '.[].name' || echo "")

if [ -z "$packages" ]; then
  echo "No packages found. Exiting..."
  exit 1
fi

echo "Packages found: $packages"

mkdir -p lib

for package in $packages; do
  echo "Fetching versions for package $package..."
  response=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
    "https://api.github.com/orgs/StarsectorCommunityApiDocs/packages/maven/$package/versions")

  if [ -z "$response" ] || [ "$response" == "null" ]; then
    echo "No versions found for package $package. Skipping..."
    continue
  fi

  versions=$(echo "$response" | jq -r '.[].metadata.container.tags[]' 2>/dev/null || echo "")

  if [ -z "$versions" ]; then
    echo "No tags found for package $package. Skipping..."
    continue
  fi

  for version in $versions; do
    echo "Downloading JAR for $package version $version..."
    curl -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
      -o lib/${package}-${version}.jar \
      https://maven.pkg.github.com/StarsectorCommunityApiDocs/$package/$package/$version/$package-$version.jar
  done
done

          echo "Fetching package list from the organization..."
response=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
  "https://api.github.com/orgs/StarsectorCommunityApiDocs/packages?package_type=maven")

if [ -z "$response" ] || [ "$response" == "null" ]; then
  echo "Error: API response is empty or null. Exiting..."
  exit 1
fi

packages=$(echo "$response" | jq -r '.[].name' || echo "")

if [ -z "$packages" ]; then
  echo "No packages found. Exiting..."
  exit 1
fi

echo "Packages found: $packages"

mkdir -p lib

for package in $packages; do
  echo "Fetching versions for package $package..."
  response=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
    "https://api.github.com/orgs/StarsectorCommunityApiDocs/packages/maven/$package/versions")

  if [ -z "$response" ] || [ "$response" == "null" ]; then
    echo "No versions found for package $package. Skipping..."
    continue
  fi

  versions=$(echo "$response" | jq -r '.[].metadata.container.tags[]' 2>/dev/null || echo "")

  if [ -z "$versions" ]; then
    echo "No tags found for package $package. Skipping..."
    continue
  fi

  for version in $versions; do
    echo "Downloading JAR for $package version $version..."
    curl -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
      -o lib/${package}-${version}.jar \
      https://maven.pkg.github.com/StarsectorCommunityApiDocs/$package/$package/$version/$package-$version.jar
  done
done

          echo "Fetching package list from the organization..."
response=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
  "https://api.github.com/orgs/StarsectorCommunityApiDocs/packages?package_type=maven")

if [ -z "$response" ] || [ "$response" == "null" ]; then
  echo "Error: API response is empty or null. Exiting..."
  exit 1
fi

packages=$(echo "$response" | jq -r '.[].name' || echo "")

if [ -z "$packages" ]; then
  echo "No packages found. Exiting..."
  exit 1
fi

echo "Packages found: $packages"

mkdir -p lib

for package in $packages; do
  echo "Fetching versions for package $package..."
  response=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
    "https://api.github.com/orgs/StarsectorCommunityApiDocs/packages/maven/$package/versions")

  if [ -z "$response" ] || [ "$response" == "null" ]; then
    echo "No versions found for package $package. Skipping..."
    continue
  fi

  versions=$(echo "$response" | jq -r '.[].metadata.container.tags[]' 2>/dev/null || echo "")

  if [ -z "$versions" ]; then
    echo "No tags found for package $package. Skipping..."
    continue
  fi

  for version in $versions; do
    echo "Downloading JAR for $package version $version..."
    curl -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
      -o lib/${package}-${version}.jar \
      https://maven.pkg.github.com/StarsectorCommunityApiDocs/$package/$package/$version/$package-$version.jar
  done
done


          echo "Fetching package list from the organization..."
response=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
  "https://api.github.com/orgs/StarsectorCommunityApiDocs/packages?package_type=maven")

if [ -z "$response" ] || [ "$response" == "null" ]; then
  echo "Error: API response is empty or null. Exiting..."
  exit 1
fi

packages=$(echo "$response" | jq -r '.[].name' || echo "")

if [ -z "$packages" ]; then
  echo "No packages found. Exiting..."
  exit 1
fi

echo "Packages found: $packages"

mkdir -p lib

for package in $packages; do
  echo "Fetching versions for package $package..."
  response=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
    "https://api.github.com/orgs/StarsectorCommunityApiDocs/packages/maven/$package/versions")

  if [ -z "$response" ] || [ "$response" == "null" ]; then
    echo "No versions found for package $package. Skipping..."
    continue
  fi

  versions=$(echo "$response" | jq -r '.[].metadata.container.tags[]' 2>/dev/null || echo "")

  if [ -z "$versions" ]; then
    echo "No tags found for package $package. Skipping..."
    continue
  fi

  for version in $versions; do
    echo "Downloading JAR for $package version $version..."
    curl -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
      -o lib/${package}-${version}.jar \
      https://maven.pkg.github.com/StarsectorCommunityApiDocs/$package/$package/$version/$package-$version.jar
  done
done

          echo "Fetching package list from the organization..."
response=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
  "https://api.github.com/orgs/StarsectorCommunityApiDocs/packages?package_type=maven")

if [ -z "$response" ] || [ "$response" == "null" ]; then
  echo "Error: API response is empty or null. Exiting..."
  exit 1
fi

packages=$(echo "$response" | jq -r '.[].name' || echo "")

if [ -z "$packages" ]; then
  echo "No packages found. Exiting..."
  exit 1
fi

echo "Packages found: $packages"

mkdir -p lib

for package in $packages; do
  echo "Fetching versions for package $package..."
  response=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
    "https://api.github.com/orgs/StarsectorCommunityApiDocs/packages/maven/$package/versions")

  if [ -z "$response" ] || [ "$response" == "null" ]; then
    echo "No versions found for package $package. Skipping..."
    continue
  fi

  versions=$(echo "$response" | jq -r '.[].metadata.container.tags[]' 2>/dev/null || echo "")

  if [ -z "$versions" ]; then
    echo "No tags found for package $package. Skipping..."
    continue
  fi

  for version in $versions; do
    echo "Downloading JAR for $package version $version..."
    curl -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
      -o lib/${package}-${version}.jar \
      https://maven.pkg.github.com/StarsectorCommunityApiDocs/$package/$package/$version/$package-$version.jar
  done
done


          echo "Fetching package list from the organization..."
response=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
  "https://api.github.com/orgs/StarsectorCommunityApiDocs/packages?package_type=maven")

if [ -z "$response" ] || [ "$response" == "null" ]; then
  echo "Error: API response is empty or null. Exiting..."
  exit 1
fi

packages=$(echo "$response" | jq -r '.[].name' || echo "")

if [ -z "$packages" ]; then
  echo "No packages found. Exiting..."
  exit 1
fi

echo "Packages found: $packages"

mkdir -p lib

for package in $packages; do
  echo "Fetching versions for package $package..."
  response=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
    "https://api.github.com/orgs/StarsectorCommunityApiDocs/packages/maven/$package/versions")

  if [ -z "$response" ] || [ "$response" == "null" ]; then
    echo "No versions found for package $package. Skipping..."
    continue
  fi

  versions=$(echo "$response" | jq -r '.[].metadata.container.tags[]' 2>/dev/null || echo "")

  if [ -z "$versions" ]; then
    echo "No tags found for package $package. Skipping..."
    continue
  fi

  for version in $versions; do
    echo "Downloading JAR for $package version $version..."
    curl -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
      -o lib/${package}-${version}.jar \
      https://maven.pkg.github.com/StarsectorCommunityApiDocs/$package/$package/$version/$package-$version.jar
  done
done

          echo "Fetching package list from the organization..."
response=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
  "https://api.github.com/orgs/StarsectorCommunityApiDocs/packages?package_type=maven")

if [ -z "$response" ] || [ "$response" == "null" ]; then
  echo "Error: API response is empty or null. Exiting..."
  exit 1
fi

packages=$(echo "$response" | jq -r '.[].name' || echo "")

if [ -z "$packages" ]; then
  echo "No packages found. Exiting..."
  exit 1
fi

echo "Packages found: $packages"

mkdir -p lib

for package in $packages; do
  echo "Fetching versions for package $package..."
  response=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
    "https://api.github.com/orgs/StarsectorCommunityApiDocs/packages/maven/$package/versions")

  if [ -z "$response" ] || [ "$response" == "null" ]; then
    echo "No versions found for package $package. Skipping..."
    continue
  fi

  versions=$(echo "$response" | jq -r '.[].metadata.container.tags[]' 2>/dev/null || echo "")

  if [ -z "$versions" ]; then
    echo "No tags found for package $package. Skipping..."
    continue
  fi

  for version in $versions; do
    echo "Downloading JAR for $package version $version..."
    curl -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
      -o lib/${package}-${version}.jar \
      https://maven.pkg.github.com/StarsectorCommunityApiDocs/$package/$package/$version/$package-$version.jar
  done
done

          echo "Fetching package list from the organization..."
response=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
  "https://api.github.com/orgs/StarsectorCommunityApiDocs/packages?package_type=maven")

if [ -z "$response" ] || [ "$response" == "null" ]; then
  echo "Error: API response is empty or null. Exiting..."
  exit 1
fi

packages=$(echo "$response" | jq -r '.[].name' || echo "")

if [ -z "$packages" ]; then
  echo "No packages found. Exiting..."
  exit 1
fi

echo "Packages found: $packages"

mkdir -p lib

for package in $packages; do
  echo "Fetching versions for package $package..."
  response=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
    "https://api.github.com/orgs/StarsectorCommunityApiDocs/packages/maven/$package/versions")

  if [ -z "$response" ] || [ "$response" == "null" ]; then
    echo "No versions found for package $package. Skipping..."
    continue
  fi

  versions=$(echo "$response" | jq -r '.[].metadata.container.tags[]' 2>/dev/null || echo "")

  if [ -z "$versions" ]; then
    echo "No tags found for package $package. Skipping..."
    continue
  fi

  for version in $versions; do
    echo "Downloading JAR for $package version $version..."
    curl -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
      -o lib/${package}-${version}.jar \
      https://maven.pkg.github.com/StarsectorCommunityApiDocs/$package/$package/$version/$package-$version.jar
  done
done

          echo "Fetching package list from the organization..."
response=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
  "https://api.github.com/orgs/StarsectorCommunityApiDocs/packages?package_type=maven")

if [ -z "$response" ] || [ "$response" == "null" ]; then
  echo "Error: API response is empty or null. Exiting..."
  exit 1
fi

packages=$(echo "$response" | jq -r '.[].name' || echo "")

if [ -z "$packages" ]; then
  echo "No packages found. Exiting..."
  exit 1
fi

echo "Packages found: $packages"

mkdir -p lib

for package in $packages; do
  echo "Fetching versions for package $package..."
  response=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
    "https://api.github.com/orgs/StarsectorCommunityApiDocs/packages/maven/$package/versions")

  if [ -z "$response" ] || [ "$response" == "null" ]; then
    echo "No versions found for package $package. Skipping..."
    continue
  fi

  versions=$(echo "$response" | jq -r '.[].metadata.container.tags[]' 2>/dev/null || echo "")

  if [ -z "$versions" ]; then
    echo "No tags found for package $package. Skipping..."
    continue
  fi

  for version in $versions; do
    echo "Downloading JAR for $package version $version..."
    curl -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
      -o lib/${package}-${version}.jar \
      https://maven.pkg.github.com/StarsectorCommunityApiDocs/$package/$package/$version/$package-$version.jar
  done
done


          echo "Fetching package list from the organization..."
response=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
  "https://api.github.com/orgs/StarsectorCommunityApiDocs/packages?package_type=maven")

if [ -z "$response" ] || [ "$response" == "null" ]; then
  echo "Error: API response is empty or null. Exiting..."
  exit 1
fi

packages=$(echo "$response" | jq -r '.[].name' || echo "")

if [ -z "$packages" ]; then
  echo "No packages found. Exiting..."
  exit 1
fi

echo "Packages found: $packages"

mkdir -p lib

for package in $packages; do
  echo "Fetching versions for package $package..."
  response=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
    "https://api.github.com/orgs/StarsectorCommunityApiDocs/packages/maven/$package/versions")

  if [ -z "$response" ] || [ "$response" == "null" ]; then
    echo "No versions found for package $package. Skipping..."
    continue
  fi

  versions=$(echo "$response" | jq -r '.[].metadata.container.tags[]' 2>/dev/null || echo "")

  if [ -z "$versions" ]; then
    echo "No tags found for package $package. Skipping..."
    continue
  fi

  for version in $versions; do
    echo "Downloading JAR for $package version $version..."
    curl -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
      -o lib/${package}-${version}.jar \
      https://maven.pkg.github.com/StarsectorCommunityApiDocs/$package/$package/$version/$package-$version.jar
  done
done


          echo "Fetching package list from the organization..."
response=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
  "https://api.github.com/orgs/StarsectorCommunityApiDocs/packages?package_type=maven")

if [ -z "$response" ] || [ "$response" == "null" ]; then
  echo "Error: API response is empty or null. Exiting..."
  exit 1
fi

packages=$(echo "$response" | jq -r '.[].name' || echo "")

if [ -z "$packages" ]; then
  echo "No packages found. Exiting..."
  exit 1
fi

echo "Packages found: $packages"

mkdir -p lib

for package in $packages; do
  echo "Fetching versions for package $package..."
  response=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
    "https://api.github.com/orgs/StarsectorCommunityApiDocs/packages/maven/$package/versions")

  if [ -z "$response" ] || [ "$response" == "null" ]; then
    echo "No versions found for package $package. Skipping..."
    continue
  fi

  versions=$(echo "$response" | jq -r '.[].metadata.container.tags[]' 2>/dev/null || echo "")

  if [ -z "$versions" ]; then
    echo "No tags found for package $package. Skipping..."
    continue
  fi

  for version in $versions; do
    echo "Downloading JAR for $package version $version..."
    curl -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
      -o lib/${package}-${version}.jar \
      https://maven.pkg.github.com/StarsectorCommunityApiDocs/$package/$package/$version/$package-$version.jar
  done
done


          echo "Fetching package list from the organization..."
response=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
  "https://api.github.com/orgs/StarsectorCommunityApiDocs/packages?package_type=maven")

if [ -z "$response" ] || [ "$response" == "null" ]; then
  echo "Error: API response is empty or null. Exiting..."
  exit 1
fi

packages=$(echo "$response" | jq -r '.[].name' || echo "")

if [ -z "$packages" ]; then
  echo "No packages found. Exiting..."
  exit 1
fi

echo "Packages found: $packages"

mkdir -p lib

for package in $packages; do
  echo "Fetching versions for package $package..."
  response=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
    "https://api.github.com/orgs/StarsectorCommunityApiDocs/packages/maven/$package/versions")

  if [ -z "$response" ] || [ "$response" == "null" ]; then
    echo "No versions found for package $package. Skipping..."
    continue
  fi

  versions=$(echo "$response" | jq -r '.[].metadata.container.tags[]' 2>/dev/null || echo "")

  if [ -z "$versions" ]; then
    echo "No tags found for package $package. Skipping..."
    continue
  fi

  for version in $versions; do
    echo "Downloading JAR for $package version $version..."
    curl -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
      -o lib/${package}-${version}.jar \
      https://maven.pkg.github.com/StarsectorCommunityApiDocs/$package/$package/$version/$package-$version.jar
  done
done

          echo "Fetching package list from the organization..."
response=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
  "https://api.github.com/orgs/StarsectorCommunityApiDocs/packages?package_type=maven")

if [ -z "$response" ] || [ "$response" == "null" ]; then
  echo "Error: API response is empty or null. Exiting..."
  exit 1
fi

packages=$(echo "$response" | jq -r '.[].name' || echo "")

if [ -z "$packages" ]; then
  echo "No packages found. Exiting..."
  exit 1
fi

echo "Packages found: $packages"

mkdir -p lib

for package in $packages; do
  echo "Fetching versions for package $package..."
  response=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
    "https://api.github.com/orgs/StarsectorCommunityApiDocs/packages/maven/$package/versions")

  if [ -z "$response" ] || [ "$response" == "null" ]; then
    echo "No versions found for package $package. Skipping..."
    continue
  fi

  versions=$(echo "$response" | jq -r '.[].metadata.container.tags[]' 2>/dev/null || echo "")

  if [ -z "$versions" ]; then
    echo "No tags found for package $package. Skipping..."
    continue
  fi

  for version in $versions; do
    echo "Downloading JAR for $package version $version..."
    curl -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
      -o lib/${package}-${version}.jar \
      https://maven.pkg.github.com/StarsectorCommunityApiDocs/$package/$package/$version/$package-$version.jar
  done
done

          echo "Fetching package list from the organization..."
response=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
  "https://api.github.com/orgs/StarsectorCommunityApiDocs/packages?package_type=maven")

if [ -z "$response" ] || [ "$response" == "null" ]; then
  echo "Error: API response is empty or null. Exiting..."
  exit 1
fi

packages=$(echo "$response" | jq -r '.[].name' || echo "")

if [ -z "$packages" ]; then
  echo "No packages found. Exiting..."
  exit 1
fi

echo "Packages found: $packages"

mkdir -p lib

for package in $packages; do
  echo "Fetching versions for package $package..."
  response=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
    "https://api.github.com/orgs/StarsectorCommunityApiDocs/packages/maven/$package/versions")

  if [ -z "$response" ] || [ "$response" == "null" ]; then
    echo "No versions found for package $package. Skipping..."
    continue
  fi

  versions=$(echo "$response" | jq -r '.[].metadata.container.tags[]' 2>/dev/null || echo "")

  if [ -z "$versions" ]; then
    echo "No tags found for package $package. Skipping..."
    continue
  fi

  for version in $versions; do
    echo "Downloading JAR for $package version $version..."
    curl -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
      -o lib/${package}-${version}.jar \
      https://maven.pkg.github.com/StarsectorCommunityApiDocs/$package/$package/$version/$package-$version.jar
  done
done

          echo "Fetching package list from the organization..."
response=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
  "https://api.github.com/orgs/StarsectorCommunityApiDocs/packages?package_type=maven")

if [ -z "$response" ] || [ "$response" == "null" ]; then
  echo "Error: API response is empty or null. Exiting..."
  exit 1
fi

packages=$(echo "$response" | jq -r '.[].name' || echo "")

if [ -z "$packages" ]; then
  echo "No packages found. Exiting..."
  exit 1
fi

echo "Packages found: $packages"

mkdir -p lib

for package in $packages; do
  echo "Fetching versions for package $package..."
  response=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
    "https://api.github.com/orgs/StarsectorCommunityApiDocs/packages/maven/$package/versions")

  if [ -z "$response" ] || [ "$response" == "null" ]; then
    echo "No versions found for package $package. Skipping..."
    continue
  fi

  versions=$(echo "$response" | jq -r '.[].metadata.container.tags[]' 2>/dev/null || echo "")

  if [ -z "$versions" ]; then
    echo "No tags found for package $package. Skipping..."
    continue
  fi

  for version in $versions; do
    echo "Downloading JAR for $package version $version..."
    curl -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
      -o lib/${package}-${version}.jar \
      https://maven.pkg.github.com/StarsectorCommunityApiDocs/$package/$package/$version/$package-$version.jar
  done
done


          echo "Fetching package list from the organization..."
response=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
  "https://api.github.com/orgs/StarsectorCommunityApiDocs/packages?package_type=maven")

if [ -z "$response" ] || [ "$response" == "null" ]; then
  echo "Error: API response is empty or null. Exiting..."
  exit 1
fi

packages=$(echo "$response" | jq -r '.[].name' || echo "")

if [ -z "$packages" ]; then
  echo "No packages found. Exiting..."
  exit 1
fi

echo "Packages found: $packages"

mkdir -p lib

for package in $packages; do
  echo "Fetching versions for package $package..."
  response=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
    "https://api.github.com/orgs/StarsectorCommunityApiDocs/packages/maven/$package/versions")

  if [ -z "$response" ] || [ "$response" == "null" ]; then
    echo "No versions found for package $package. Skipping..."
    continue
  fi

  versions=$(echo "$response" | jq -r '.[].metadata.container.tags[]' 2>/dev/null || echo "")

  if [ -z "$versions" ]; then
    echo "No tags found for package $package. Skipping..."
    continue
  fi

  for version in $versions; do
    echo "Downloading JAR for $package version $version..."
    curl -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
      -o lib/${package}-${version}.jar \
      https://maven.pkg.github.com/StarsectorCommunityApiDocs/$package/$package/$version/$package-$version.jar
  done
done

          echo "Fetching package list from the organization..."
response=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
  "https://api.github.com/orgs/StarsectorCommunityApiDocs/packages?package_type=maven")

if [ -z "$response" ] || [ "$response" == "null" ]; then
  echo "Error: API response is empty or null. Exiting..."
  exit 1
fi

packages=$(echo "$response" | jq -r '.[].name' || echo "")

if [ -z "$packages" ]; then
  echo "No packages found. Exiting..."
  exit 1
fi

echo "Packages found: $packages"

mkdir -p lib

for package in $packages; do
  echo "Fetching versions for package $package..."
  response=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
    "https://api.github.com/orgs/StarsectorCommunityApiDocs/packages/maven/$package/versions")

  if [ -z "$response" ] || [ "$response" == "null" ]; then
    echo "No versions found for package $package. Skipping..."
    continue
  fi

  versions=$(echo "$response" | jq -r '.[].metadata.container.tags[]' 2>/dev/null || echo "")

  if [ -z "$versions" ]; then
    echo "No tags found for package $package. Skipping..."
    continue
  fi

  for version in $versions; do
    echo "Downloading JAR for $package version $version..."
    curl -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
      -o lib/${package}-${version}.jar \
      https://maven.pkg.github.com/StarsectorCommunityApiDocs/$package/$package/$version/$package-$version.jar
  done
done

          echo "Fetching package list from the organization..."
response=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
  "https://api.github.com/orgs/StarsectorCommunityApiDocs/packages?package_type=maven")

if [ -z "$response" ] || [ "$response" == "null" ]; then
  echo "Error: API response is empty or null. Exiting..."
  exit 1
fi

packages=$(echo "$response" | jq -r '.[].name' || echo "")

if [ -z "$packages" ]; then
  echo "No packages found. Exiting..."
  exit 1
fi

echo "Packages found: $packages"

mkdir -p lib

for package in $packages; do
  echo "Fetching versions for package $package..."
  response=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
    "https://api.github.com/orgs/StarsectorCommunityApiDocs/packages/maven/$package/versions")

  if [ -z "$response" ] || [ "$response" == "null" ]; then
    echo "No versions found for package $package. Skipping..."
    continue
  fi

  versions=$(echo "$response" | jq -r '.[].metadata.container.tags[]' 2>/dev/null || echo "")

  if [ -z "$versions" ]; then
    echo "No tags found for package $package. Skipping..."
    continue
  fi

  for version in $versions; do
    echo "Downloading JAR for $package version $version..."
    curl -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
      -o lib/${package}-${version}.jar \
      https://maven.pkg.github.com/StarsectorCommunityApiDocs/$package/$package/$version/$package-$version.jar
  done
done

          echo "Fetching package list from the organization..."
response=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
  "https://api.github.com/orgs/StarsectorCommunityApiDocs/packages?package_type=maven")

if [ -z "$response" ] || [ "$response" == "null" ]; then
  echo "Error: API response is empty or null. Exiting..."
  exit 1
fi

packages=$(echo "$response" | jq -r '.[].name' || echo "")

if [ -z "$packages" ]; then
  echo "No packages found. Exiting..."
  exit 1
fi

echo "Packages found: $packages"

mkdir -p lib

for package in $packages; do
  echo "Fetching versions for package $package..."
  response=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
    "https://api.github.com/orgs/StarsectorCommunityApiDocs/packages/maven/$package/versions")

  if [ -z "$response" ] || [ "$response" == "null" ]; then
    echo "No versions found for package $package. Skipping..."
    continue
  fi

  versions=$(echo "$response" | jq -r '.[].metadata.container.tags[]' 2>/dev/null || echo "")

  if [ -z "$versions" ]; then
    echo "No tags found for package $package. Skipping..."
    continue
  fi

  for version in $versions; do
    echo "Downloading JAR for $package version $version..."
    curl -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
      -o lib/${package}-${version}.jar \
      https://maven.pkg.github.com/StarsectorCommunityApiDocs/$package/$package/$version/$package-$version.jar
  done
done


          echo "Fetching package list from the organization..."
response=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
  "https://api.github.com/orgs/StarsectorCommunityApiDocs/packages?package_type=maven")

if [ -z "$response" ] || [ "$response" == "null" ]; then
  echo "Error: API response is empty or null. Exiting..."
  exit 1
fi

packages=$(echo "$response" | jq -r '.[].name' || echo "")

if [ -z "$packages" ]; then
  echo "No packages found. Exiting..."
  exit 1
fi

echo "Packages found: $packages"

mkdir -p lib

for package in $packages; do
  echo "Fetching versions for package $package..."
  response=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
    "https://api.github.com/orgs/StarsectorCommunityApiDocs/packages/maven/$package/versions")

  if [ -z "$response" ] || [ "$response" == "null" ]; then
    echo "No versions found for package $package. Skipping..."
    continue
  fi

  versions=$(echo "$response" | jq -r '.[].metadata.container.tags[]' 2>/dev/null || echo "")

  if [ -z "$versions" ]; then
    echo "No tags found for package $package. Skipping..."
    continue
  fi

  for version in $versions; do
    echo "Downloading JAR for $package version $version..."
    curl -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
      -o lib/${package}-${version}.jar \
      https://maven.pkg.github.com/StarsectorCommunityApiDocs/$package/$package/$version/$package-$version.jar
  done
done

          echo "Fetching package list from the organization..."
response=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
  "https://api.github.com/orgs/StarsectorCommunityApiDocs/packages?package_type=maven")

if [ -z "$response" ] || [ "$response" == "null" ]; then
  echo "Error: API response is empty or null. Exiting..."
  exit 1
fi

packages=$(echo "$response" | jq -r '.[].name' || echo "")

if [ -z "$packages" ]; then
  echo "No packages found. Exiting..."
  exit 1
fi

echo "Packages found: $packages"

mkdir -p lib

for package in $packages; do
  echo "Fetching versions for package $package..."
  response=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
    "https://api.github.com/orgs/StarsectorCommunityApiDocs/packages/maven/$package/versions")

  if [ -z "$response" ] || [ "$response" == "null" ]; then
    echo "No versions found for package $package. Skipping..."
    continue
  fi

  versions=$(echo "$response" | jq -r '.[].metadata.container.tags[]' 2>/dev/null || echo "")

  if [ -z "$versions" ]; then
    echo "No tags found for package $package. Skipping..."
    continue
  fi

  for version in $versions; do
    echo "Downloading JAR for $package version $version..."
    curl -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
      -o lib/${package}-${version}.jar \
      https://maven.pkg.github.com/StarsectorCommunityApiDocs/$package/$package/$version/$package-$version.jar
  done
done


          echo "Fetching package list from the organization..."
response=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
  "https://api.github.com/orgs/StarsectorCommunityApiDocs/packages?package_type=maven")

if [ -z "$response" ] || [ "$response" == "null" ]; then
  echo "Error: API response is empty or null. Exiting..."
  exit 1
fi

packages=$(echo "$response" | jq -r '.[].name' || echo "")

if [ -z "$packages" ]; then
  echo "No packages found. Exiting..."
  exit 1
fi

echo "Packages found: $packages"

mkdir -p lib

for package in $packages; do
  echo "Fetching versions for package $package..."
  response=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
    "https://api.github.com/orgs/StarsectorCommunityApiDocs/packages/maven/$package/versions")

  if [ -z "$response" ] || [ "$response" == "null" ]; then
    echo "No versions found for package $package. Skipping..."
    continue
  fi

  versions=$(echo "$response" | jq -r '.[].metadata.container.tags[]' 2>/dev/null || echo "")

  if [ -z "$versions" ]; then
    echo "No tags found for package $package. Skipping..."
    continue
  fi

  for version in $versions; do
    echo "Downloading JAR for $package version $version..."
    curl -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
      -o lib/${package}-${version}.jar \
      https://maven.pkg.github.com/StarsectorCommunityApiDocs/$package/$package/$version/$package-$version.jar
  done
done

          echo "Fetching package list from the organization..."
response=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
  "https://api.github.com/orgs/StarsectorCommunityApiDocs/packages?package_type=maven")

if [ -z "$response" ] || [ "$response" == "null" ]; then
  echo "Error: API response is empty or null. Exiting..."
  exit 1
fi

packages=$(echo "$response" | jq -r '.[].name' || echo "")

if [ -z "$packages" ]; then
  echo "No packages found. Exiting..."
  exit 1
fi

echo "Packages found: $packages"

mkdir -p lib

for package in $packages; do
  echo "Fetching versions for package $package..."
  response=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
    "https://api.github.com/orgs/StarsectorCommunityApiDocs/packages/maven/$package/versions")

  if [ -z "$response" ] || [ "$response" == "null" ]; then
    echo "No versions found for package $package. Skipping..."
    continue
  fi

  versions=$(echo "$response" | jq -r '.[].metadata.container.tags[]' 2>/dev/null || echo "")

  if [ -z "$versions" ]; then
    echo "No tags found for package $package. Skipping..."
    continue
  fi

  for version in $versions; do
    echo "Downloading JAR for $package version $version..."
    curl -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
      -o lib/${package}-${version}.jar \
      https://maven.pkg.github.com/StarsectorCommunityApiDocs/$package/$package/$version/$package-$version.jar
  done
done

          echo "Fetching package list from the organization..."
response=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
  "https://api.github.com/orgs/StarsectorCommunityApiDocs/packages?package_type=maven")

if [ -z "$response" ] || [ "$response" == "null" ]; then
  echo "Error: API response is empty or null. Exiting..."
  exit 1
fi

packages=$(echo "$response" | jq -r '.[].name' || echo "")

if [ -z "$packages" ]; then
  echo "No packages found. Exiting..."
  exit 1
fi

echo "Packages found: $packages"

mkdir -p lib

for package in $packages; do
  echo "Fetching versions for package $package..."
  response=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
    "https://api.github.com/orgs/StarsectorCommunityApiDocs/packages/maven/$package/versions")

  if [ -z "$response" ] || [ "$response" == "null" ]; then
    echo "No versions found for package $package. Skipping..."
    continue
  fi

  versions=$(echo "$response" | jq -r '.[].metadata.container.tags[]' 2>/dev/null || echo "")

  if [ -z "$versions" ]; then
    echo "No tags found for package $package. Skipping..."
    continue
  fi

  for version in $versions; do
    echo "Downloading JAR for $package version $version..."
    curl -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
      -o lib/${package}-${version}.jar \
      https://maven.pkg.github.com/StarsectorCommunityApiDocs/$package/$package/$version/$package-$version.jar
  done
done

          echo "Fetching package list from the organization..."
response=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
  "https://api.github.com/orgs/StarsectorCommunityApiDocs/packages?package_type=maven")

if [ -z "$response" ] || [ "$response" == "null" ]; then
  echo "Error: API response is empty or null. Exiting..."
  exit 1
fi

packages=$(echo "$response" | jq -r '.[].name' || echo "")

if [ -z "$packages" ]; then
  echo "No packages found. Exiting..."
  exit 1
fi

echo "Packages found: $packages"

mkdir -p lib

for package in $packages; do
  echo "Fetching versions for package $package..."
  response=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
    "https://api.github.com/orgs/StarsectorCommunityApiDocs/packages/maven/$package/versions")

  if [ -z "$response" ] || [ "$response" == "null" ]; then
    echo "No versions found for package $package. Skipping..."
    continue
  fi

  versions=$(echo "$response" | jq -r '.[].metadata.container.tags[]' 2>/dev/null || echo "")

  if [ -z "$versions" ]; then
    echo "No tags found for package $package. Skipping..."
    continue
  fi

  for version in $versions; do
    echo "Downloading JAR for $package version $version..."
    curl -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
      -o lib/${package}-${version}.jar \
      https://maven.pkg.github.com/StarsectorCommunityApiDocs/$package/$package/$version/$package-$version.jar
  done
done


          echo "Fetching package list from the organization..."
response=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
  "https://api.github.com/orgs/StarsectorCommunityApiDocs/packages?package_type=maven")

if [ -z "$response" ] || [ "$response" == "null" ]; then
  echo "Error: API response is empty or null. Exiting..."
  exit 1
fi

packages=$(echo "$response" | jq -r '.[].name' || echo "")

if [ -z "$packages" ]; then
  echo "No packages found. Exiting..."
  exit 1
fi

echo "Packages found: $packages"

mkdir -p lib

for package in $packages; do
  echo "Fetching versions for package $package..."
  response=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
    "https://api.github.com/orgs/StarsectorCommunityApiDocs/packages/maven/$package/versions")

  if [ -z "$response" ] || [ "$response" == "null" ]; then
    echo "No versions found for package $package. Skipping..."
    continue
  fi

  versions=$(echo "$response" | jq -r '.[].metadata.container.tags[]' 2>/dev/null || echo "")

  if [ -z "$versions" ]; then
    echo "No tags found for package $package. Skipping..."
    continue
  fi

  for version in $versions; do
    echo "Downloading JAR for $package version $version..."
    curl -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
      -o lib/${package}-${version}.jar \
      https://maven.pkg.github.com/StarsectorCommunityApiDocs/$package/$package/$version/$package-$version.jar
  done
done

          echo "Fetching package list from the organization..."
response=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
  "https://api.github.com/orgs/StarsectorCommunityApiDocs/packages?package_type=maven")

if [ -z "$response" ] || [ "$response" == "null" ]; then
  echo "Error: API response is empty or null. Exiting..."
  exit 1
fi

packages=$(echo "$response" | jq -r '.[].name' || echo "")

if [ -z "$packages" ]; then
  echo "No packages found. Exiting..."
  exit 1
fi

echo "Packages found: $packages"

mkdir -p lib

for package in $packages; do
  echo "Fetching versions for package $package..."
  response=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
    "https://api.github.com/orgs/StarsectorCommunityApiDocs/packages/maven/$package/versions")

  if [ -z "$response" ] || [ "$response" == "null" ]; then
    echo "No versions found for package $package. Skipping..."
    continue
  fi

  versions=$(echo "$response" | jq -r '.[].metadata.container.tags[]' 2>/dev/null || echo "")

  if [ -z "$versions" ]; then
    echo "No tags found for package $package. Skipping..."
    continue
  fi

  for version in $versions; do
    echo "Downloading JAR for $package version $version..."
    curl -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
      -o lib/${package}-${version}.jar \
      https://maven.pkg.github.com/StarsectorCommunityApiDocs/$package/$package/$version/$package-$version.jar
  done
done

          echo "Fetching package list from the organization..."
response=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
  "https://api.github.com/orgs/StarsectorCommunityApiDocs/packages?package_type=maven")

if [ -z "$response" ] || [ "$response" == "null" ]; then
  echo "Error: API response is empty or null. Exiting..."
  exit 1
fi

packages=$(echo "$response" | jq -r '.[].name' || echo "")

if [ -z "$packages" ]; then
  echo "No packages found. Exiting..."
  exit 1
fi

echo "Packages found: $packages"

mkdir -p lib

for package in $packages; do
  echo "Fetching versions for package $package..."
  response=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
    "https://api.github.com/orgs/StarsectorCommunityApiDocs/packages/maven/$package/versions")

  if [ -z "$response" ] || [ "$response" == "null" ]; then
    echo "No versions found for package $package. Skipping..."
    continue
  fi

  versions=$(echo "$response" | jq -r '.[].metadata.container.tags[]' 2>/dev/null || echo "")

  if [ -z "$versions" ]; then
    echo "No tags found for package $package. Skipping..."
    continue
  fi

  for version in $versions; do
    echo "Downloading JAR for $package version $version..."
    curl -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
      -o lib/${package}-${version}.jar \
      https://maven.pkg.github.com/StarsectorCommunityApiDocs/$package/$package/$version/$package-$version.jar
  done
done

          echo "Fetching package list from the organization..."
response=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
  "https://api.github.com/orgs/StarsectorCommunityApiDocs/packages?package_type=maven")

if [ -z "$response" ] || [ "$response" == "null" ]; then
  echo "Error: API response is empty or null. Exiting..."
  exit 1
fi

packages=$(echo "$response" | jq -r '.[].name' || echo "")

if [ -z "$packages" ]; then
  echo "No packages found. Exiting..."
  exit 1
fi

echo "Packages found: $packages"

mkdir -p lib

for package in $packages; do
  echo "Fetching versions for package $package..."
  response=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
    "https://api.github.com/orgs/StarsectorCommunityApiDocs/packages/maven/$package/versions")

  if [ -z "$response" ] || [ "$response" == "null" ]; then
    echo "No versions found for package $package. Skipping..."
    continue
  fi

  versions=$(echo "$response" | jq -r '.[].metadata.container.tags[]' 2>/dev/null || echo "")

  if [ -z "$versions" ]; then
    echo "No tags found for package $package. Skipping..."
    continue
  fi

  for version in $versions; do
    echo "Downloading JAR for $package version $version..."
    curl -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
      -o lib/${package}-${version}.jar \
      https://maven.pkg.github.com/StarsectorCommunityApiDocs/$package/$package/$version/$package-$version.jar
  done
done

          echo "Fetching package list from the organization..."
response=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
  "https://api.github.com/orgs/StarsectorCommunityApiDocs/packages?package_type=maven")

if [ -z "$response" ] || [ "$response" == "null" ]; then
  echo "Error: API response is empty or null. Exiting..."
  exit 1
fi

packages=$(echo "$response" | jq -r '.[].name' || echo "")

if [ -z "$packages" ]; then
  echo "No packages found. Exiting..."
  exit 1
fi

echo "Packages found: $packages"

mkdir -p lib

for package in $packages; do
  echo "Fetching versions for package $package..."
  response=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
    "https://api.github.com/orgs/StarsectorCommunityApiDocs/packages/maven/$package/versions")

  if [ -z "$response" ] || [ "$response" == "null" ]; then
    echo "No versions found for package $package. Skipping..."
    continue
  fi

  versions=$(echo "$response" | jq -r '.[].metadata.container.tags[]' 2>/dev/null || echo "")

  if [ -z "$versions" ]; then
    echo "No tags found for package $package. Skipping..."
    continue
  fi

  for version in $versions; do
    echo "Downloading JAR for $package version $version..."
    curl -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
      -o lib/${package}-${version}.jar \
      https://maven.pkg.github.com/StarsectorCommunityApiDocs/$package/$package/$version/$package-$version.jar
  done
done
echo "Fetching package list from the organization..."
response=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
  "https://api.github.com/orgs/StarsectorCommunityApiDocs/packages?package_type=maven")

if [ -z "$response" ] || [ "$response" == "null" ]; then
  echo "Error: API response is empty or null. Exiting..."
  exit 1
fi

packages=$(echo "$response" | jq -r '.[].name' || echo "")

if [ -z "$packages" ]; then
  echo "No packages found. Exiting..."
  exit 1
fi

echo "Packages found: $packages"

mkdir -p lib

for package in $packages; do
  echo "Fetching versions for package $package..."
  response=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
    "https://api.github.com/orgs/StarsectorCommunityApiDocs/packages/maven/$package/versions")

  if [ -z "$response" ] || [ "$response" == "null" ]; then
    echo "No versions found for package $package. Skipping..."
    continue
  fi

  versions=$(echo "$response" | jq -r '.[].metadata.container.tags[]' 2>/dev/null || echo "")

  if [ -z "$versions" ]; then
    echo "No tags found for package $package. Skipping..."
    continue
  fi

  for version in $versions; do
    echo "Downloading JAR for $package version $version..."
    curl -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
      -o lib/${package}-${version}.jar \
      https://maven.pkg.github.com/StarsectorCommunityApiDocs/$package/$package/$version/$package-$version.jar
  done
done

          echo "Fetching package list from the organization..."
response=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
  "https://api.github.com/orgs/StarsectorCommunityApiDocs/packages?package_type=maven")

if [ -z "$response" ] || [ "$response" == "null" ]; then
  echo "Error: API response is empty or null. Exiting..."
  exit 1
fi

packages=$(echo "$response" | jq -r '.[].name' || echo "")

if [ -z "$packages" ]; then
  echo "No packages found. Exiting..."
  exit 1
fi

echo "Packages found: $packages"

mkdir -p lib

for package in $packages; do
  echo "Fetching versions for package $package..."
  response=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
    "https://api.github.com/orgs/StarsectorCommunityApiDocs/packages/maven/$package/versions")

  if [ -z "$response" ] || [ "$response" == "null" ]; then
    echo "No versions found for package $package. Skipping..."
    continue
  fi

  versions=$(echo "$response" | jq -r '.[].metadata.container.tags[]' 2>/dev/null || echo "")

  if [ -z "$versions" ]; then
    echo "No tags found for package $package. Skipping..."
    continue
  fi

  for version in $versions; do
    echo "Downloading JAR for $package version $version..."
    curl -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
      -o lib/${package}-${version}.jar \
      https://maven.pkg.github.com/StarsectorCommunityApiDocs/$package/$package/$version/$package-$version.jar
  done
done

          echo "Fetching package list from the organization..."
response=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
  "https://api.github.com/orgs/StarsectorCommunityApiDocs/packages?package_type=maven")

if [ -z "$response" ] || [ "$response" == "null" ]; then
  echo "Error: API response is empty or null. Exiting..."
  exit 1
fi

packages=$(echo "$response" | jq -r '.[].name' || echo "")

if [ -z "$packages" ]; then
  echo "No packages found. Exiting..."
  exit 1
fi

echo "Packages found: $packages"

mkdir -p lib

for package in $packages; do
  echo "Fetching versions for package $package..."
  response=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
    "https://api.github.com/orgs/StarsectorCommunityApiDocs/packages/maven/$package/versions")

  if [ -z "$response" ] || [ "$response" == "null" ]; then
    echo "No versions found for package $package. Skipping..."
    continue
  fi

  versions=$(echo "$response" | jq -r '.[].metadata.container.tags[]' 2>/dev/null || echo "")

  if [ -z "$versions" ]; then
    echo "No tags found for package $package. Skipping..."
    continue
  fi

  for version in $versions; do
    echo "Downloading JAR for $package version $version..."
    curl -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
      -o lib/${package}-${version}.jar \
      https://maven.pkg.github.com/StarsectorCommunityApiDocs/$package/$package/$version/$package-$version.jar
  done
done


      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "17"

      - name: Generate Javadocs
        run: |
          mkdir -p javadocs
          javadoc -encoding ISO-8859-1 -docencoding UTF-8 -charset UTF-8 \
            -d javadocs -sourcepath src -subpackages com.fs.starfarer.api \
            -classpath "lib/*" -quiet -Xdoclint:none

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: javadocs
